Λεπτομερειες εκτελεσης:
gcc -c .c
gcc  .o
./a.out filename 

1)Εχω δημιουργησει κλειδι μεσω της ftok, το οποιο θα μπορουσε καλλιστα να αντικατασταθεις απο την σημαια IPC_CREATE μιας και ο χωρος μνημης του πατερα(αυτου δηλαδη που εκανε shmat και sem_get την κοινη μνημη και σετ σημοφορων στην μνημη της διεργασιας), αντιγραφεται στα παιδια, οποτε εχουν ηδη προσβαση στο σετ σημοφορων και στην κοινη μνημη.
2)Για να μπορει η κοινη μνημη να κραταει εναν int για την τοποθετηση του αιτηματος γραμμης απο το παιδι, και εναν char array[100] για την τοποθετηση της απαντησης απο τον πατερα, χρησιμοποιω ενα struct sh_buffer το οποιο περιεχει και τα δυο.
3)Οποτε δημιουργειται κοινη μνημη με μεγεθος sizeof(struct sh_buffer) 
4)Χρησιμοποιω 3 σημοφορους(αιτιολογηση παρακατω), και για να το επιτυχω αυτο δημιουργω ενα set 3 σημοφορων(αντι για 3 set ενος σημοφορου το καθενα)  
  Αυτο ειναι εφικτο μεσω προσδιορισμου πληθος σημοφορων στην  sem_id=semget(key, 3, IPC_CREAT | IPC_EXCL | 0666);
5)Για καθε εναν σημοφορο κραταω το index του στο σετ σημοφορων σε μεταβλητη η οποια ειναι ενδεικτικη της λειτουργιας του int writer_block,reader_block,printer_block;
6)Για να κανω operations σε καθε εναν σημοφορο στο σετ, εχω δημιουργησει τις συναρτησεις sem_up(int sem_id,int sem_num), sem_down(int sem_id,int sem_num),
  οι οποιες κανουν την up, down στον σημοφορο που βρισκεται στην sem_num θεση του σετ σημοφορων με κωδικο sem_id
7)Αυτες λειτουργουν βαση της λογικης:
    sem_d.sem_num = sem_num;  Σε ποιον σεμοφορο να γινει(να αρχισει να εκτελειται) το operation   
    sem_d.sem_op = 1 ή -1 αναλογα αν ειναι up ή down
    semop(sem_id, &sem_d, 1) οπου βαζουμε 1 ετσι ωστε το operation να γινει μονο στον σεμοφορο που θελουμε 

8)Πρωτου μπουμε στη λογικη των σεμοφορων, αξιζει να αναφερθει οτι:
  i)Για να βρουμε το αριθμο γραμμων κανουμε αρχικα μια σαρωση σε ολο το αρχειο, πραγμα το οποιο γινεται
     πρωτου κανουμε fork() για τα παιδια ετσι ωστε να εχουν και αυτα προσβαση στον αριθμο γραμμων
  ii)Πρωτα κανουμε K-επαναληψεις για να δημιουργησουμε τα παιδια, και αφου γινουν ολες οι δημιουργιες, μονο τοτε αρχιζει ο πατερας να κοιταει την κοινη μνημη
  iii)Εκτελουμε τον κωδικα του παιδιου μεσα στο for που δημιουργειται, και απλα μετα καλουμε exit(0) ετσι ωστε να σταματησει το παιδι και να μην δημιουργησει και αυτο αλλα παιδια, δηλαδη
	for (...)  {
		pid=fork()
 		if (pid==0)  {
			κωδικας παιδιου
                        exit(0)
  
		}
	}
  iv)Για να βρει την γραμμη που ζηταει το καθε παιδι, ο γονεας ξανα-σαρωνει το αρχειο.
     Αυτο δεν ειναι καθολου αποδοτικο, και μια λυση ειναι να εχουμε φυλαξει σε εναν πινακα ολες τις γραμμες ετσι ωστε με ενα 
     array[line_requested] να εχουμε προσβαση στην γραμμη που χρειαζομαστε.
     Παρολαυτα δεν το υλοποιησα καθως δεν ειναι αυτος ο σκοπος της εργασιας.
9)Οσον αφορα το κομματι των 3 σημοφορων:
  Καταρχας χρειαζομαστε εναν σημοφορο ο οποιος θα εμποδιζει πολλαπλα παιδια να κανουν ταυτοχρονες αιτησεις, τον οποιον ονομαζουμε writer_block, και αριχικοποιουμε με 1 
  ετσι ωστε το πρωτο παιδι που θα προλαβει, να τον κανει down και να μπλκαρει τους υπολοιπους.
  Επειτα χρειαζομαστε εναν σημοφορο ο οποιος να επιτρεπει στον πατερα να διαβασει την κοινη μνημη μονο οταν καποιο παιδι εχει κανει αιτημα.
  Αυτον τον ονομαζουμε reader_block και αρχικοποιουμε με 0 ετσι οταν ο πατερας κανει down να μπορει να συνεχισει μονο αν καποιο παιδι εχει κανει up(reader_block), πραγμα που συμβαινει μονο οταν το παιδι εχει γραψει το αιτημα του στην μνημη
  Επειτα, εχουμε τον printer block ο οποιος αρχικοποιειται σε 0, και στοχευει στο να μπλοκαρει ενα παιδι απο το να παει να εκτυπωσει το περιεχομενο της κοινης μνημης που ζητησε, εαν ο πατερας δεν του εχει γραψει την απαντηση.
  Οποτε αφου το παιδι κανει up(reader_block) θα κανει down(printer_blcok) και θα μπλοκαριστει, ενω ο πατερας οταν τελειωσει να γραφει στην μνημη την απαντηση του, θα κανει up(printer_block) για να αφησει το παιδι να κανει την εκτυπωση της κοινης μνημης,
  Τελος, για εφοσον τυπωσει το παιδι την γραμμη που του επεστρεψε ο γονεας, κανει up(writer_block) για επιτρεψει και σε αλλα παιδια να κανουν αιτηματα. 